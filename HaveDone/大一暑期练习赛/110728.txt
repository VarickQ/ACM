//1002
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
	__int64 a,b;
	while(scanf("%I64d%I64d",&a,&b) == 2)
	{
		if((a+b)%86==0)printf("yes\n");
		else printf("no\n");
	}
	return 0;
}
//1006
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#include <math.h>
struct point{
	double x,y;
}a[3],b;
struct line{point a,b;};

double distance(point p1,point p2){
	return sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));
}

point intersection(line u,line v){
	point ret=u.a;
	double t=((u.a.x-v.a.x)*(v.a.y-v.b.y)-(u.a.y-v.a.y)*(v.a.x-v.b.x))
			/((u.a.x-u.b.x)*(v.a.y-v.b.y)-(u.a.y-u.b.y)*(v.a.x-v.b.x));
	ret.x+=(u.b.x-u.a.x)*t;
	ret.y+=(u.b.y-u.a.y)*t;
	return ret;
}

//重心
//到三角形三顶点距离的平方和最小的点
//三角形内到三边距离之积最大的点
point barycenter(point a,point b,point c){
	line u,v;
	u.a.x=(a.x+b.x)/2;
	u.a.y=(a.y+b.y)/2;
	u.b=c;
	v.a.x=(a.x+c.x)/2;
	v.a.y=(a.y+c.y)/2;
	v.b=b;
	return intersection(u,v);
}
int main()
{
	int n,i,j;
	while(scanf("%d",&n) && n)
	{
		for(i=0 ; i < n ; i++)
		{
			for(j=0 ; j < 3 ; j++)
				scanf("%lf%lf",&a[j].x,&a[j].y);
			b = barycenter(a[0],a[1],a[2]);
			printf("%.1lf %.1lf\n",b.x,b.y);			
		}
	}
	return 0;
}
//1007
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
int Pow(int a,int n){
	int ans=1;
	for(int i=0 ; i < n ; i++)
		ans *= a;
	return ans;
}
int toTen(int n,int a){
	int ans=0,i=0;
	while(n){
		ans += (n%10)*Pow(a,i);
		i++;
		n /= 10;
	}
	return ans;
}
int main()
{
	int n,m,i,a,sum;
	while(scanf("%d",&n) == 1)
	{
		sum = 0;
		for(i=0 ; i < n ; i++)
		{
			scanf("%d(%d)",&m,&a);
			sum += toTen(m,a);
		}
		printf("%d\n",sum);
	}
	return 0;
}
//1005
#include <stdio.h>
#include <math.h>
#include <map>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
//gcd
int gcd(int a,int b){
	if(b == 0) return a;
	else return gcd(b,a%b);
}
int main()
{
	int m,n,pos,less;
	while(scanf("%d%d",&n,&m)==2)
	{
		if(n==-1 && m==-1) break;
		if(gcd(n,m)==1)printf("YES\n");
		else printf("POOR Haha\n");
	}
	return 0;
}
//1004
#include <stdio.h>
#include <math.h>
#include <map>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;


int main()
{
	int T,m,n,i,a;
	__int64 ans,p[32];
	p[0] = 10000;
	for(i=1 ; i <= 30 ; i++)
		p[i] = (__int64)(1<<i)*10000;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d",&m,&n);
		int f = 0,count = 0;
		for(i=0 ; i < n ; i++){
			scanf("%d",&a);
			if(f&&i<m)count++;
			if(a==1)f = 1;
		}
		ans = 0;
		if(n<m){
			for(i=0 ; i < count ; i++)
				ans += p[i];
		} else {
			for(i=0 ; i < count+n-m ; i++)
				ans += p[i];
		}
		printf("%I64d RMB\n",ans);
	}
	return 0;
}
//1001
#include <stdio.h>
#include <math.h>
#include <map>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;

char a[205],b[205];
int sum[205],aa[205],bb[205];
int main()
{
	int len1,len2,len,i,j;
	while(scanf("%s %s",a,b) != EOF)
	{
		memset(aa,0,sizeof(aa));
		memset(bb,0,sizeof(bb));
		memset(sum,0,sizeof(sum));
		len1 = strlen(a);
		for(i=0,j=len1-1 ; i < len1 ; i++,j--)
			aa[i] = a[j]-'A';//dao zhi
		len2 = strlen(b);
		for(i=0,j=len2-1 ; i < len2 ; i++,j--)
			bb[i] = b[j]-'A';//dao zhi

		len = len1>len2?len1:len2;
		int carry=0;
		for(i=0 ; i < len ; i++){
			sum[i] = (aa[i]+bb[i]+carry)%26;
			carry = (aa[i]+bb[i]+carry)/26;
		}
		if(carry != 0)
			sum[i] += carry;
		len = i;
		for(i=len ; i >= 0 ; i--)
			if(sum[i]!=0)break;
		for( ; i >= 0 ; i--)
			printf("%c",sum[i]+'A');
		printf("\n");
	}
	return 0;
}
//1003
#include <stdio.h>
#include <math.h>
#include <queue>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;

char mat[3][12][12];
int v[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
int n,m,t;
struct node{
	int cen,x,y,d;
};
void bfs(){
	queue<node> q;
	while(!q.empty())q.pop();
	node st;
	st.cen = st.d = st.x = st.y = 0;
	q.push(st);
	while(!q.empty())
	{
		node f=q.front(); q.pop();
		node ff;
		for(int i=0 ; i < 4 ; i++)
		{
			ff.cen = f.cen;
			ff.x = f.x+v[i][0];
			ff.y = f.y+v[i][1];
			ff.d = f.d+1;
			if(ff.x>=0 && ff.x<n && ff.y>=0 && ff.y<m && ff.d<=t && mat[ff.cen][ff.x][ff.y]!='*')
			{
				if(mat[ff.cen][ff.x][ff.y]=='#'&&mat[1-ff.cen][ff.x][ff.y]!='*'&&mat[1-ff.cen][ff.x][ff.y]!='#'){
					ff.cen = 1-ff.cen;
					if(mat[ff.cen][ff.x][ff.y] == 'P'){
						printf("YES\n"); return;
					}
					mat[ff.cen][ff.x][ff.y] = '*';
					q.push(ff);
				}
				else if(mat[ff.cen][ff.x][ff.y] == '.'){
					mat[ff.cen][ff.x][ff.y] = '*';
					q.push(ff);
				}
				else if(mat[ff.cen][ff.x][ff.y] == 'P'){
					printf("YES\n"); return;
				}
			}
		}
	}
	printf("NO\n");
}
int main()
{
	int T,i,j,c2,x2,y2,c1,x1,y1;
	scanf("%d",&T);
	while(T--)
	{
		memset(mat,0,sizeof(mat));
		scanf("%d%d%d",&n,&m,&t);
		for(i=0 ; i < n ; i++)
			scanf("%s",mat[0][i]);
		for(i=0 ; i < n ; i++)
			scanf("%s",mat[1][i]);
		if(mat[0][0][0]=='P')printf("YES\n");
		else bfs();
	}
	return 0;
}