#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<math.h>
#include<csetjmp>
#include<bitset>
#include<cassert>
#include<cctype>
#include<climits>
#include<cmath>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<deque>
#include<fstream>
#include<functional>
#include<iomanip>
#include<iostream>
#include<limits>
#include<list>
#include<map>
#include<numeric>
#include<queue>
#include<set>
#include<sstream>
#include<stack>
#include<string>
#include<utility>
#include<vector>
using namespace std;

int a[205][205];
int main()
{
	int T,n,cs=1,x,y;
	scanf("%d",&T);
	while(T--)
	{
		memset(a,0,sizeof(a));
		int k = 1;
		scanf("%d",&n);
		printf("Case #%d:\n",cs++);
		for(x=0 ; x < n ; x++)
			for(y=0 ; y < n-1 ; y++)
				a[x][y] = k++;
		for(x=0 ; x < n ; x++)
			a[x][n-1] = k++;
		for(x=0 ; x < n ; x++){
			for(y=0 ; y < n-1 ; y++)
				printf("%d ",a[x][y]);
			printf("%d\n",a[x][y]);
		}
	}
	return 0;
}
#include<stdio.h>
#include<iostream>
using namespace std;

const __int64 MM = 1000000007;//！
#define ll __int64
int cs=0;
ll p[10020];
ll gcd(ll a,ll b){
	return b?gcd(b,a%b):a;
}
int main()
{
	int T,n,m;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d",&n,&m);
		ll ans = 0;
		ll M = 2*m*MM;
		memset(p,0,sizeof(p));
		p[0] = 1;
		for(int i=0 ; i <= m ; ++i)
			p[i+1] = (p[i]*n)%M;
		//旋转的时候
		for(int i=1 ; i <= m ; ++i)
			ans = (ans+p[gcd(i,m)])%M;
		//翻转的时候//为奇数//偶数的两种情况
		if(m&1){
			ans = (ans+p[m/2+1]*m)%M;
		} else {
			ans = (ans+(p[m/2]+p[m/2+1])*m/2)%M;
		}
		printf("Case #%d: %I64d\n",++cs,(ans/(2*m))%MM);
	}
}