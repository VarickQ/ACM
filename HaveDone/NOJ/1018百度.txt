#include <stdio.h>
int main()
{
	int n;
	int c;
	while(scanf("%d",&n) == 1)
	{
		c = n%8;
		switch(c)
		{
		case 0:
		case 1:
		case 3:
		case 4:
		case 5:
		case 7:
			printf("no\n");
			break;
		case 2:
		case 6:
			printf("yes\n");
			break;
		}
 }
return 0;
} 
//这是另外一种斐波那切数列.F(0) = 7, F(1) = 11, F(n) = F(n-1) + F(n-2) (n>=2) 
//每行输入一个数n。（n <= 10^9 ) 
//每行输出一个yes如果F(n)能被3整除,否则输出no 
当然这题可以用递推法去做，但是如此大的数据肯定会超时
所以应该这样分析：
有性质： n%3=a, m%3=b; 那么 (n+m)%3=(a+b)%3; 
由此可得:f(2)%3=(f(0)%3 + f(1)%3)%3;f(3)%3=(f(1)%3+f(2)%3)%3;…………………………………f(n)%3=(f(n-2)%3+f(n-1)%3)%3;
由此可见，以后每次运算只用到了 f(n) % 3  则可令 ：f'(n) = f(n) % 3, f'(n-2) = f(n-2) % 3, f'(n-1) = f(n-1) %3;那么f'(n)=(f'(n-2)+f'(n-1))%3;
行成一个每项都小与3的序列;(7%3=1, 11%3=2) f'(n) ={ 1, 2, 0, 2, 2, 1, 0, 1, 1, 2, 0, 2, 2…………};
从中可以发现 到红色部分是一个循环 这样就找到规律了。循环节的长度可以用程序跑出来.  为什么会形成循环简单说明:  f'(n) 是由 f'(n-2) + f'(n-1)决定;  而 f'(n-2)，f'(n-1)都是小于3的，那么它们( f'(n-2), f'(n-1)) )的组合方式也是有限的，所以会出现重复了
