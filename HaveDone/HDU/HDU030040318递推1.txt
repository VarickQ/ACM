//1001AC
#include <iostream>
using namespace std;

int main()
{
	int n,m,i,dp[41];
	dp[1] = dp[2] = 1;
	for( i=3 ; i <= 40 ; i++ )
		dp[i] = dp[i-1]+dp[i-2];
	scanf("%d", &n);
	while(n--)
	{
		scanf("%d", &m);
		printf("%d\n", dp[m]);
	}
	//system("pause");
	return 0;
}

//1002AC
#include <iostream>
using namespace std;

int main()
{
	int n,a,i,dp[31];
	dp[1] = 4;
	for( i=2 ; i <= 30 ; i++ )
		dp[i] = 2*(dp[i-1]-1);
	scanf("%d", &n);
	while(n--)
	{
		scanf("%d", &a);
		printf("%d\n", dp[a]);
	}
	//system("pause");
	return 0;
}

//1003AC
#include <iostream>
using namespace std;

int main()
{
	int n;
	__int64 a,b,i,dp[51];
	dp[0] = 0;dp[1] = 1;dp[2] = 2;
	for( i=3 ; i <= 50 ; i++ )
		dp[i] = dp[i-1]+dp[i-2];
	scanf("%d", &n);
	while(n--)
	{
		cin >> a >> b ;
		printf("%I64d\n", dp[b-a]);
	}
	//system("pause");
	return 0;
}

//1004AC
#include <iostream>
using namespace std;

int main()
{
	__int64 n,i,dp[51];
	dp[1] = 3;
	dp[2] = 6;
	dp[3] = 6;
	for( i=4 ; i <= 50 ; i++ )
		dp[i] = dp[i-1] + dp[i-2]*2;

	while(scanf("%I64d", &n) == 1)
		printf("%I64d\n", dp[n]);
	//system("pause");
	return 0;
}

//1005AC
#include <iostream>
using namespace std;

int main()
{
	__int64 n,i,dp[51];
	dp[1] = 1;
	dp[2] = 2;
	for( i=3 ; i <= 50 ; i++ )
		dp[i] = dp[i-1] + dp[i-2];

	while(scanf("%I64d", &n) == 1)
		printf("%I64d\n", dp[n]);
	//system("pause");
	return 0;
}

//1006AC
#include <iostream>
using namespace std;

int main()//分割平面的个数=交点个数+顶点个数+1
{
	int c;
	__int64 n,i,dp[10001];
	dp[1] = 2;
	dp[2] = 7;
	for( i=3 ; i <= 10000 ; i++ )
		dp[i] = dp[i-1] + 4*(i-1) + 1;
	scanf("%d", &c);
	while( c-- )
	{
		scanf("%I64d", &n);
		printf("%I64d\n", dp[n]);
	}
	//system("pause");
	return 0;
}

//1007AC
#include <iostream>
using namespace std;

int main()
{
	__int64 n,i,dp[57];
	dp[1] = 1;
	dp[2] = 2;
	dp[3] = 3;
	dp[4] = 4;
	for( i=5 ; i < 56 ; i++ )
		dp[i] = dp[i-1] + dp[i-3];

	while( scanf("%d", &n) && n )
		printf("%I64d\n", dp[n]);
	//system("pause");
	return 0;
}

//1010AC
#include <iostream>
using namespace std;

int main()
{
	int n,i,j;
	double min,f3[65],f4[65];//f4[n] =min(f4[i]*2 + f3[n - i]);
	f3[1] = f4[1] = 1;
	for( i=2 ; i <= 64 ; i++ )//2^n-1,三个塔
		f3[i] = (f3[i-1]+1)*2 - 1;
	for( i=2 ; i <= 64 ; i++ )//四个塔
	{
		min = 0;
		for( j=1 ; j < i ; j++ )
			if( f4[j]*2 + f3[i-j] < min || min==0)
				min = f4[j]*2 + f3[i-j];
		f4[i] = min;
	}

	while(scanf("%d", &n) == 1)
		printf("%.lf\n", f4[n]);
	//system("pause");
	return 0;
}

//1008AC
#include <iostream>
using namespace std;

int main()
{
	int m,n,i,j;
	__int64 d[21][21]={0};
	for( i=1 ; i <= 20 ; i++ )
		d[i][1] = i;
	for( i=2 ; i <= 20 ; i++ )
		for( j=2 ; j <= i ; j++ )
			d[i][j] = d[i-1][j]+d[i][j-1];

	while(scanf("%d %d", &m, &n) == 2)
	{
		printf("%I64d\n", d[m][n]);
	}
	//system("pause");
	return 0;
}