#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
#define MAXN 505

struct Node{
	char like[5],dislike[5];
}cat[MAXN],dog[MAXN];

int a[MAXN][MAXN];
int match[MAXN];
bool visited[MAXN];
int n,m,p,nc,nd;

bool find(int i){
	for(int j=0 ; j < nd ; j++)
		if(a[i][j] && !visited[j])
		{
			visited[j] = true;
			if(match[j]==-1 || find(match[j]))
			{
				match[j] = i;
				return true;
			}
		}
	return false;
}

int main()
{
	int T,i,j;
	char s1[5],s2[5];
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d%d",&n,&m,&p);
		nc = nd = 0;
		for(i=0 ; i < p ; i++){
			scanf("%s%s",s1,s2);
			if(s1[0] == 'C'){
				strcpy(cat[nc].like,s1);
				strcpy(cat[nc].dislike,s2);
				nc++;
			} else {
				strcpy(dog[nd].like,s1);
				strcpy(dog[nd].dislike,s2);
				nd++;
			}
		}
		memset(a,0,sizeof(a));
		for(i=0 ; i < nc ; i++)
			for(j=0 ; j < nd ; j++)
				if(strcmp(cat[i].like,dog[j].dislike)==0 || strcmp(cat[i].dislike,dog[j].like)==0)
					a[i][j] = 1;
		
		int ans = 0;
		memset(match,-1,sizeof(match));
		for(i=0 ; i < nc ; i++)
		{
			memset(visited,false,sizeof(visited));
			if(find(i)) ans++;
		}
		printf("%d\n",p-ans);
	}
	return 0;
}