//##ø™µ∆Œ Ã‚##
#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<math.h>
#include<csetjmp>
#include<bitset>
#include<cassert>
#include<cctype>
#include<climits>
#include<cmath>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<deque>
#include<fstream>
#include<functional>
#include<iomanip>
#include<iostream>
#include<limits>
#include<list>
#include<map>
#include<numeric>
#include<queue>
#include<set>
#include<sstream>
#include<stack>
#include<string>
#include<utility>
#include<vector>
using namespace std;
#define inf 1000000000
int a[110][16],temp[110][16];
int mark[16];
int main()
{
	int T,n,i,j,min,t,num,k,f,x,sum,m,M;
	while(scanf("%d%d",&n,&m)!=EOF)
	{
		for(i=1 ; i <= n ; ++i)
			for(j=1 ; j <= m ; ++j)
				scanf("%d",&a[i][j]);
		M = 1<<m;
		min = inf;
		if(n==1)
		{
			memset(mark,0,sizeof(mark));		
			for(i=0;i<M;i++)
			{
				t=i;
				k=1;
				sum=0;
				while(t)
				{
					if(t&1) 
					{
						sum++;
						mark[k]=1;
					}
					t>>=1;
					++k;
				}
				for(j=1 ; j <= m ; ++j)
					if(!(mark[j]^mark[j-1]^mark[j+1]^a[1][j])) break;
				if(j==m+1 && min>sum) min=sum;
			}
			if(min != inf) printf("%d\n",min);
			else printf("no solution\n");
			continue;
		}
		for(i=0 ; i < M ; ++i)
		{
			memset(temp,0,sizeof(temp));
			t=i;
			k=m;
			while(t)
			{
				if(t&1) temp[1][k]=1;
				k--;
				t>>=1;
			}
			for(j=2 ; j <= n ; ++j)
				for(k=1 ; k <= m ; ++k)
					temp[j][k]=!(a[j-1][k]^temp[j-1][k]^temp[j-2][k]^temp[j-1][k-1]^temp[j-1][k+1]);
			for(f=0,j=1 ; j <= m ; ++j)
				if(!(a[n][j]^temp[n][j]^temp[n-1][j]^temp[n][j-1]^temp[n][j+1])) break;
			if(j <= m) continue;
			for(sum=0,j=1 ; j <= n ; ++j)
				for(k=1 ; k <= m ; ++k)
					if(temp[j][k]) sum++;
			if(sum<min) min=sum;
		}
		if(min==inf) printf("no solution\n");
		else printf("%d\n",min);
	}
	return 0;
}