#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define inf 1<<30

struct point{
	int x,y;
}a[1005];
int n;
bool cmp(point a,point b){
	if(a.x == b.x)
		return a.y > b.y;
	return a.x < b.x;
}
int find(int x,int y){
	int l=0,r=n-1,mid;
	while(l<=r){
		mid = (l+r)/2;
		if(a[mid].x == x && a[mid].y == y)
			return true;
		if(a[mid].x<x || (a[mid].x==x&&a[mid].y>y))l=mid+1;
		else r=mid-1;
	}
	return false;
}
int main()
{
	int i,j,ans,ax,ay,bx,by;
	while(scanf("%d",&n) && n)
	{
		for(i=0 ; i < n ; i++)
			scanf("%d %d",&a[i].x,&a[i].y);
		sort(a,a+n,cmp);
		ans = 0;
		for(i=0 ; i < n ; i++)
			for(j=i+1 ; j < n ; j++)
			{
				if(a[i].y == a[j].y)
				{
					int l = a[j].x-a[i].x;
					ax = a[i].x;
					ay = a[i].y-l;
					bx = a[j].x;
					by = ay;
					if(find(ax,ay)&&find(bx,by))
						ans++;
				}
				else if(a[i].y < a[j].y)
				{
					int dx = a[j].x-a[i].x;
					int dy = a[j].y-a[i].y;
					ax = a[i].x+dy;
					ay = a[i].y-dx;
					bx = a[j].x+dy;
					by = a[j].y-dx;
					if(find(ax,ay)&&find(bx,by))
						ans++;
				}
			}
		printf("%d\n",ans);
	}
	return 0;
}