#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define N 50005
const long long inf = (long long)1<<63-1;
struct Node{
	int c,v,next;
}edge[N*2];
int heade[N],w[N],k,V,e;
void add(int u,int v,int c){
	edge[k].v = v;
	edge[k].c = c;
	edge[k].next = heade[u];
	heade[u] = k++;
}
long long dist[N],res;
int qu[N];
bool vis[N];
void spfa(int s)//sÎªÔ­µã
{
	int i,head=0,tail=0;
	memset(vis,false,sizeof(vis));
	for(i=1 ; i <= V ; i++)dist[i]=inf;
	dist[s] = 0;
	vis[s] = true;
	qu[tail++] = s;
	while(tail > head){
		int u = qu[head++];
		vis[u] = false;
		if(head >= N) head=0;
		for(i=heade[u] ; i!=-1 ; i=edge[i].next){
			int v=edge[i].v;
			if(dist[v] > dist[u]+edge[i].c){
				dist[v] = dist[u]+edge[i].c;
				if(!vis[v]){
					qu[tail++] = v;
					vis[v] = true;
					if(tail >= N)tail=0;
				}
			}
		}
	}
}
int main()
{
	int T,i,a,b,c;
	scanf("%d",&T);
	while(T--)
	{
		memset(heade,-1,sizeof(heade));
		scanf("%d%d",&V,&e);
		for(i=1 ; i <= V ; i++)
			scanf("%d",&w[i]);
		for(i=k=0 ; i < e ; i++){
			scanf("%d%d%d",&a,&b,&c);
			add(a,b,c);
			add(b,a,c);
		}
		spfa(1);
		res = 0;
		int f=0;
		for(i=1 ; i <= V ; i++){
			if(dist[i] == inf){
				f = 1;break;
			}
			res += w[i]*dist[i];
		}
		if(!f)printf("%lld\n",res);
		else printf("No Answer\n");
	}
	return 0;
}