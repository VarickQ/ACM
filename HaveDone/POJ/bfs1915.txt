#include <iostream>
#include <queue>
using namespace std;

struct node{
	int x,y,d;
}st,end;
int l,s[305][305],vis[305][305];
int v[8][2]={{1,2},{2,1},{1,-2},{2,-1},{-1,-2},{-2,-1},{-2,1},{-1,2}};

void bfs(){
	queue<node> q;
	st.d=0;
	q.push(st);
	vis[st.x][st.y]=1;
	while(!q.empty())
	{
		node f=q.front(); q.pop();
		node ff;
		for(int i=0 ; i<8 ; i++)
		{
			ff.x=f.x+v[i][0]; ff.y=f.y+v[i][1]; ff.d=f.d+1;
			if(ff.x==end.x && ff.y==end.y){
				printf("%d\n", ff.d); return ;
			}
			if(ff.x>=0 && ff.x<l && ff.y>=0 && ff.y<l && !vis[ff.x][ff.y])
			{
				vis[ff.x][ff.y]=1;
				q.push(ff);
			}
		}
	}
}

int main()
{
	int t;
	scanf("%d", &t);
	while(t--)
	{
		memset(vis,0,sizeof(vis));
		scanf("%d", &l);
		scanf("%d%d", &st.x, &st.y);
		scanf("%d%d", &end.x, &end.y);
		if(st.x==end.x && st.y==end.y)
			printf("0\n");
		else bfs();
	}
	return 0;
}