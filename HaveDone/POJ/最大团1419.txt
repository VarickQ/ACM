#include <iostream>
#include <vector>
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
using namespace std;

//最大团
//返回最大团大小和一个方案,传入图的大小n和邻接阵mat
//mat[i][j]为布尔量
#define MAXN 110

int mat[MAXN][MAXN],ret[MAXN];
void clique(int n, int* u, int mat[][MAXN], int size, int& max, int& bb, int* res, int* rr, int* c) {
	int i, j, vn, v[MAXN];
	if (n) {
		if (size + c[u[0]] <= max) return;
		for (i = 0; i < n + size - max && i < n; ++ i) {
			for (j = i + 1, vn = 0; j < n; ++ j)
				if (mat[u[i]][u[j]])
					v[vn ++] = u[j];
			rr[size] = u[i];
			clique(vn, v, mat, size + 1, max, bb, res, rr, c);
			if (bb) return;
		}
	} else if (size > max) {
		max = size;
		for (i = 0; i < size; ++ i)
			res[i] = rr[i];
		bb = 1;
	}
}

int maxclique(int n, int mat[][MAXN], int *ret) {
	int max = 0, bb, c[MAXN], i, j;
	int vn, v[MAXN], rr[MAXN];
	for (c[i = n - 1] = 0; i >= 0; -- i) {
		for (vn = 0, j = i + 1; j < n; ++ j)
			if (mat[i][j])
				v[vn ++] = j;
		bb = 0;
		rr[0] = i;
		clique(vn, v, mat, 1, max, bb, ret, rr, c);
		c[i] = max;
	}
	return max;
}

int main()
{
	int x,y,T,n,k;
	scanf("%d",&T);
	while(T--){
		memset(ret,0,sizeof(ret));
		scanf("%d%d",&n,&k);
		for(int i=0 ; i < n ; i++)
			for(int j=0 ; j < n ; j++)
				mat[i][j]=mat[j][i]=1;
		for(int i=0 ; i < k ; i++){
			scanf("%d%d",&x,&y);
			mat[x-1][y-1]=mat[y-1][x-1]=0;
		}
		int ans=maxclique(n,mat,ret);
		printf("%d\n",ans);
		for(int i=0 ; i < ans ; i++)
			if(i==0)printf("%d",ret[i]+1);
			else printf(" %d",ret[i]+1);
		printf("\n");
	} 
	return 0;
}