#include <stdio.h>
#include <math.h>
#include <queue>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define inf 100000000
#define N 50005
struct A{
	int v,c,next;
}e[N*10];
int k,end;
int heade[N],d[N],qu[N*10];
bool inqu[N];
void add(int u,int v,int c){
	e[k].v = v;
	e[k].c = c;
	e[k].next = heade[u];
	heade[u] = k++;
}
void spfa(){
	int i,j,head=0,tail=0;
	for(i=0 ; i <= end ; i++)
		d[i] = -inf;
	d[0] = 0;
	inqu[0] = true;
	qu[tail++] = 0;
	while(tail > head){
		int u = qu[head++];
		inqu[u] = false;
		for(i=heade[u] ; i!=0 ; i=e[i].next){
			int v = e[i].v;
			if(d[v] < d[u] + e[i].c){
				d[v] = d[u] + e[i].c;
				if(!inqu[v]){
					qu[tail++] = v;
					inqu[v] = true;
				}
			}
		}
	}
}
int main()
{
	int i,a,b,c,n;
	end = 0;
	scanf("%d",&n);
	k = 1;
	while(n--)
	{
		scanf("%d%d%d",&a,&b,&c);
		if(b+1 > end)end = b+1;
		add(a,b+1,c);//ci<=S[bi+1]-S[ai]
	}
	for(i=0 ; i <= end ; i++)
	{
		add(i,i+1,0);//S[i+1]-S[i] >= 0
		add(i+1,i,-1);//S[i]-S[i+1] >= -1
	}
	spfa();
	printf("%d\n",d[end]);
	return 0;
}